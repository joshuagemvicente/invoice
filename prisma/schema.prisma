// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(cuid())
  username   String     @unique
  email      String     @unique
  password   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  products   Product[]
  categories Category[]
}

model Product {
  id          String     @id @default(cuid())
  name        String
  description String
  stock       Int?       @default(0)
  price       Float?     @default(0)
  status      Status     @default(outOfStock)
  barcode     String?    @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  User        User?      @relation(fields: [userId], references: [id])
  userId      String?
  Category    Category?  @relation(fields: [categoryId], references: [id])
  categoryId  String?
  Suppliers   Suppliers? @relation(fields: [suppliersId], references: [id])
  suppliersId String?
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  User        User?     @relation(fields: [userId], references: [id])
  userId      String?
  products    Product[]
}

model Suppliers {
  id          String    @id @default(cuid())
  name        String
  contactInfo String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

enum Status {
  inStock
  lowStock
  outOfStock
}
